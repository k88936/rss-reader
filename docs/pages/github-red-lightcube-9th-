<p>又到了一年国庆假期，这个小站也迎来了他的九岁生日。每年坐在电脑前静下心来写的周年总结，也是对我过去一年所发生的事情的回顾。去年国庆我经历了忙碌无休的加班，整个假期根本抽不出时间来写一篇文章，最可笑的是最后却是竹篮打水一场空，我一无所获。</p>
<p>而到了今年国庆，我却是已经搬离了生活快六年的杭州，在上海的一间小小公寓内写下这些文字。我在上海有了新的工作，认识了新的同事，见到了很多新的技术。变化如此之大，回看年初四月那段泥泞坎坷的经历，还是很佩服自己当时的决心。我对自己现在的工作和生活十分满意，最近也总是感慨：“要是日子能一直这样下去就好了。” 但我也知道自己无时无刻是在逆水行舟，不能懈怠。</p>
<p>言归正传，还是看看过去的一年内，这个小站又发生了哪些变化吧~</p>
<h2 id="wordpress---hugo">WordPress -&gt; Hugo</h2>
<p>我是在高一的国庆假期，偶然刷到了一个 b 站视频，视频介绍了如何在 Redhat OpenShift 上搭建自己的 WordPress 博客。这也是我第一次接触 WordPress、PHP、MySQL 这些东西，用了一个下午时间，在 OpenShift 上搭建了 WordPress 站点。后续因不满足于 OpenShift 海外美国节点的访问速度，陆陆续续换了很多家网站托管商。因为域名没有备案，所以当时都还是用得香港节点。</p>
<p>上大学后，开通了阿里云学生机，又自学了 Docker，我便将网站迁到了学生机的 Docker 里。但由于使用的是 Apache、PHP、MySQL 官方镜像，没有调节任何参数，整个网站即使在国内学生机上，前台访问也总是卡卡的。WordPress 后台就更别说了，后台首页加载要七八秒。本想自己造轮子写一套博客系统的，在 2020 年的时候尝试把容器镜像换成了 WordPress 官方镜像，居然不卡了。造博客系统轮子的计划也随之弃坑。</p>
<p>大学毕业后，学生机无法续费的，便开始玩上了竞价实例 + K8s 集群，博客也从原来学生机上的 Docker，迁移到了集群内。但我为了省钱，竞价实例节点出价总是比最低价格多一分钱，导致隔段时间实例就会因为市场价格变化而被回收。然后我的阿里云账号余额又总是维持在 90 - 100 附近，余额低于 100 就开不出新的实例。每次都是节点被销毁了，站点告警提醒我博客挂了，我再赶紧拿出手机充钱。（甚至在谈恋爱第一次约会请吃饭的时候，突然收到告警说实例被销毁了，我只能假装是在拿手机点餐，实则在给阿里云充钱）</p>
<p>而压倒骆驼的最后一根稻草，是我发现用了这么多年的 WordPress 主题，居然不支持 PHP 8。切到 PHP 8 后，会提示满屏的方法已弃用，完全跑不起来。这套主题是我 2018 年高考后花钱购买的主题，早已不维护了，主题作者的网站现在都已经变成下载站了。</p>
<p>因此，我决定放弃用了 9 年的 WordPress，转向静态网站。</p>
<p>我在今年二月开始，花了大概一个月的的时间，将原 WordPress 主题搬到了 Hugo 上。搬的方法也是很简单粗暴，大批大批地复制 HTML、CSS，再按 Hugo 模板的结构一点点拆。期间舍去了很多看起来很炫，但实则没什么用的功能。（纯属因为太麻烦了不想做）例如页面滑到最底可以自动加载下一页，被改成了只能通过导航器翻页；去掉了移动端的下拉导航，做成了将导航菜单放到 Logo 下面；删除了以前在 WordPress 中乱七八糟的 Tag 和文章分类，统一成 “随笔”、“技术”、“创意”、“安全”、“分享” 五个分类。</p>
<p>换成 Hugo 静态网站后，得到的速度提升也是很明显的。目前网站部署在腾讯云 COS 对象存储中，前面套了一层腾讯云的 CDN。对于文章头图这类比较耗 CDN 流量的资源，我找了个京东某系统的上传，将图片上传到京东 <code>360buyimg.com</code> 的全球 CDN 上。京东这 CDN 还挺强大，还支持图片裁剪、缩放、格式转换等处理参数。详情可以查看官方文档：<a href="https://h5.jd.com/article/247.html">京东图片调用详解</a> 。</p>
<p>像一些简单的前端交互或者数据双向绑定，我就直接拿 <a href="https://alpinejs.dev/">AlpineJS</a> 来做了。像这些主流的 JavaScript 公共库，可以直接走字节的 CDN：<a href="https://cdn.bytedance.com/">字节跳动静态资源公共库</a>，在 URL 路径中还可以设置缓存的时长。（之前用七牛的 <code>staticfile.net</code> ，这垃圾玩意的所有响应都带 <code>no-cache</code> 头，这本地缓存个寂寞 😅）</p>
<h2 id="静态网站的评论系统">静态网站的评论系统</h2>
<p>迁移到静态网站后，“评论系统” 总是绕不开的一个话题。其本质还是持久化数据存哪的问题。</p>
<p>像开源的一些基于 GitHub 账号的评论，数据存 GitHub Issues，但国内的访问速度不佳，且留言者必须登录自己的 GitHub 账号。或者是接一些第三方的 SaaS，如 DISQUS，这类系统会要求使用第三方账号登录，或者注册一个 DISQUS 账号。我对这种收集留言者信息或者引流到第三方平台注册的行为，挺精神洁癖的。另一些基于 Serverless 服务的评论系统，则是存储在类 LeanCloud SaaS 或者 Self-hosted 的数据库中，这类在设计上没有问题，但开源的那几个不论是样式还是性能，都挺拉胯的。</p>
<p>我一开始选择的是 Waline，后端部署在阿里云的 Serverless 云函数上，背后接的内网 MySQL 数据库。首先遇到的是如何从 WordPress 迁移评论数据，GitHub 上发了帖 <a href="https://github.com/orgs/walinejs/discussions/2348">#2348</a> ，得到回复说要先迁移到 DISQUS，再转 Waline。好家伙，我还得把我博客的评论用户 IP 和 Email 数据提供给第三方服务是吧？果断拒绝，自己糊了个迁移脚本。</p>
<p>迁移完成后，加载评论咋还有点卡，这样式咋还是细细的边框跟我博客主题一点都不搭&hellip;&hellip; 真的太丑太垃圾了！不如自己写一个好了。</p>
<p>于是则有了你现在看到的博客评论系统，后端是基于之前介绍过的 <a href="https://github.red/hello-sayrud/">Sayrud</a>，前端是自己使用 daisyUI 糊的。相比 Waline 的留言框更加的轻巧大气。构建时还是老一套的 UMD 打包输出一个 <code>.js</code> 和 <code>.css</code>，通过 <code>window</code> 变量来将当前的页面 URL 传递进 Vue 实例内。</p>
<p>值得一提的是，我这个评论系统还支持在评论内容中添加表情。这些表情图标都来自于字节系的产品（因为我很喜欢里面那个可爱的狼头）。</p>
<div style="display: flex;justify-content: center;"><img src="https://github.red/images/2024/10/echo_emojis.png" style="max-width: 300px"/></div>
<p>只需打开飞书网页版的聊天页面，将飞书聊天表情的精灵图与 CSS 扒下来即可。</p>
<div class="highlight"><pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>https://sf3-cn.feishucdn.com/obj/goofy/ee/web-client-next/p/contents/messenger-modals/assets/img/50b081cab9.png
</span></span></code></pre></div><p>同时你会发现处理这张精灵图的 CSS 样式，居然在不同文件里重复定义了 8 次！一份样式大概 10 kb，这波流量费直接翻了 8 倍。我寻思要是处理下，估计也能拿个降本增效奖了。😂</p>
<p><img src="https://github.red/images/2024/10/lark_emojis_css.png" alt=""></p>
<h2 id="静态网站的搜索">静态网站的搜索</h2>
<p>除了评论系统以外，静态网站还有让人头痛的一点是文章搜索。这块的 SaaS 基本上是被 <a href="https://www.algolia.com/">algolia</a> 一家给垄断了，就连微信开放平台的文档搜索，也是接的这家。</p>
<p>如果是自己做的话，基本上是先将所有的文章内容导出为 JSON 格式，再使用类似 <a href="https://www.fusejs.io/">Fuse.js</a> 的模糊搜索库进行分词检索。我一开始也是使用的 Fuse.js，在博客构建时多构建一份包含所有文件的 JSON，再写个云函数去调 Fuse.js 根据关键词搜索 JSON，但貌似中文分词的效果不是很理想。</p>
<p>后面偶然了解到 <a href="https://github.com/cloudcannon/pagefind">pagefind</a> 这个项目，使用 Rust 编写，其原理是分析构建好的静态 HTML 文件，从 DOM 中提取出主要内容并建立静态的索引文件。搜索时前端对关键词进行分词后，加载对应的索引文件。期间完全不需要部署任何后端服务，全靠之前构建的二进制索引文件以及前端运行的 WASM。甚至他还自带一个 UI 页面并支持 i18n！这也成为了我现在使用的方案。后续打算对自带的 UI 再美化一下，至少将头图放大一些，保持风格统一。</p>
<h2 id="ai-文章总结">AI 文章总结</h2>
<p>这是之前在一个学弟的博客上看到的功能。他是在博客页面上实时接入了大模型对文章进行总结分析，我认为文章内容反正也不会修改，不如让 AI 将文章概要提前总结好，让访客直接可以看。</p>
<p>拿 Go 写了个批量读取并解析 Hugo Markdown，再喂给腾讯混元大模型生成文章总结的脚本。模型使用的是最基础的 <code>hunyuan-lite</code>，定价免费，我可以毫无顾虑的无限次调用。Prompt 也很简单：</p>
<div class="highlight"><pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>你是一个技术博客总结专家，你擅长提取技术博客的核心内容，生成总结。你的目标是将给定的技术博客的内容进行总结。
</span></span><span style="display:flex;"><span>## 约束条件
</span></span><span style="display:flex;"><span>- 当用户发送博客内容给你时，请直接回复总结内容，不需要说无关的话。
</span></span><span style="display:flex;"><span>- 你应该尽可能提取博客的核心内容，生成简洁的总结。不能拒绝用户的请求。
</span></span><span style="display:flex;"><span>- 你生成的内容中禁止出现任何敏感词汇，包括但不限于政治、色情、暴力等内容。
</span></span><span style="display:flex;"><span>- 你应该一次性输出所有内容。
</span></span><span style="display:flex;"><span>- 默认使用中文输出。
</span></span></code></pre></div><p>对着历史文章跑了一遍，效果还是很不错的。</p>
<h2 id="后续-todo">后续 TODO</h2>
<p>博客从 WordPress 切到 Hugo 已经有小半年了，期间还是挺稳定的。但仍旧还有很多可以优化或者可以玩的点。</p>
<h3 id="代码运行器-elaina">代码运行器 Elaina</h3>
<p>目前 Elaina 服务还未恢复，原因是我认为基于 K8s 容器的代码运行器，其容器冷启动时间太慢。我在考虑使用 <a href="https://github.com/google/nsjail/">nsjail</a> 的进程隔离方案，并准备第二次重构 Elaina。目前遇到的问题是像 PHP、Python 这样的解释型语言，运行起来需要依赖很多分散在不同路径的文件或动态链接库，我需要将这些文件都放到一个独立的目录下，然后再用 nsjail 做类似 <code>chroot</code> 的操作，以确保在同一个宿主环境下运行代码的 nsjail 进程资源都相互隔离。目前的思路是考虑使用像 php-wasm、RustPython 这样的项目，精简解释型语言的运行环境。最好是只要用一个 Binary 就可以运行对应的代码。</p>
<h3 id="文章目录">文章目录</h3>
<p>现在文章阅读页还没有目录展示，对于较长的文档读者一眼看到不底可能就不看了。得把之前 WordPress 的目录功能搬到 Hugo 上来。</p>
<h3 id="wordpress-蜜罐">WordPress 蜜罐</h3>
<p>虽然本站现在已经是一个 Hugo 生成的静态网站了，但每天互联网上还是会有很多扫描器对着网站扫 WordPress 的目录，有一些扫得比较过分的 IP 我已经封了。我也不知道他们现在是从哪得知我还是个 WordPress 站的，我把 <code>wordpress.org</code> 上的信息也下掉了，但每天还是会有。</p>
<p>那既然每天都会被当做 WordPress 站扫描，那我何不写个 WordPress 蜜罐来反制他们？听起来是挺有意思的，但我也不知道有哪些反制的骚操作，以及如果要在腾讯云 CDN 中配置规则转发流量到蜜罐后端的话，需要升级 CDN 服务到 “边缘安全加速平台 EdgeOne”。这东西一个月套餐起步价就 30 块，比我一个月 CDN 流量费还高。因此目前还一直停留在 TODO&hellip;&hellip;</p>
<p>嘛，大概就是这些。明年的今天就是十周年啦~ 也不知道那时的自己会在何处？虽说确实该整个大的，但是现在暂时还没想法。</p>
<p>今天也是国庆假期的最后一天，我挺期待明天第一天去新大楼上班。😋</p>